3.2.4 高阶函数的其他应用
1.currying  函数柯里化
  currying又称为部分求值。一个currying函数首先会接受一些参数，接受了这些参数之后，该函数并不会立即求值，而是继续返回另外一个函数，
  刚才传入的参数在函数形成的闭包中被保存起来。待到函数被真正求值的时候，之前传入的所有参数将会被一次性用于求值。
  
var currying = function(fn) {
    var args = [];
    
    return function() {
        if (arguments.length === 0) {
            return fn.apply(args, arguments);
        }else {
            [].push.apply(args, arguments);
            return arguments.callee
        }
    }
}

2.uncurrying

实现方式1
Function.prototype.uncurrying = function() {
    var self = this;
    return function() {
        var obj = Array.prototype.shift.call(arguments);
        return self.apply(obj, arguments);
    }
}
实现方式2
Function.prototype.uncurrying = function() {
    var self = this;
    return function() {
        return Function.prototype.call.apply(seft, arguments);
    }
}
